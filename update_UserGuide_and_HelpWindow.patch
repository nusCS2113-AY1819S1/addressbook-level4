Index: docs/UserGuide.adoc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- docs/UserGuide.adoc	(revision 6c87e805fbe2ba7fe05c2d39f24f9e504da44d7b)
+++ docs/UserGuide.adoc	(date 1537194688075)
@@ -39,82 +39,81 @@
 ====
 *Command Format*
 
-* Words in `UPPER_CASE` are the parameters to be supplied by the user e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.
-* Items in square brackets are optional e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.
-* Items with `…`​ after them can be used multiple times including zero times e.g. `[t/TAG]...` can be used as `{nbsp}` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.
-* Parameters can be in any order e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.
+* Words in `UPPER_CASE` are the parameters to be supplied by the user e.g. in `add name/NAME`, `NAME` is a parameter which can be used as `add name/commando workout`.
+* Items in square brackets are optional e.g `name/NAME [tag/TAG]` can be used as `name/commando workout tag/strength` or as `name/commando workout`.
+* Items with `…`​ after them can be used multiple times including zero times e.g. `[tag/TAG]...` can be used as `{nbsp}` (i.e. 0 times), `tag/strength`, `tag/strength tag/fast-paced` etc.
+* Parameters can be in any order e.g. if the command specifies `name/NAME type/TYPE`, `type/TYPE name/NAME` is also acceptable.
 ====
 
 === Viewing help : `help`
 
 Format: `help`
 
-=== Adding a person: `add`
+=== Adding a workout: `add`
 
-Adds a person to the address book +
-Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]...`
+Adds a workout to the workout book +
+Format: `add name/NAME [type/TYPE] [duration/DURATION] [difficulty/DIFFICULTY] [equipment/EQUIPMENT] [muscle/MUSCLE] [calories/CALORIES] [instruction/INSTRUCTION] [tag/TAG]…​`
 
 [TIP]
-A person can have any number of tags (including 0)
+A workout can have any number of tags (including 0)
 
 Examples:
 
-* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`
-* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`
+* `add name/commando workout type/strength, cardio duration/20m difficulty/advanced equipment/dumbbell, bench muscle/bicep, tricep calories/150 instruction/set 1: bicep curl reps: 4-6 set 2: tricep extension reps: 4-6 tag/heavy`
 
-=== Listing all persons : `list`
+=== Listing all workouts : `list`
 
-Shows a list of all persons in the address book. +
+Shows a list of all workouts in the workout book. +
 Format: `list`
 
-=== Editing a person : `edit`
+=== Editing a workout : `edit`
 
-Edits an existing person in the address book. +
-Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]...`
+Edits an existing workout in the workout book. +
+Format: `edit INDEX name/NAME [type/TYPE] [duration/DURATION] [difficulty/DIFFICULTY] [equipment/EQUIPMENT] [muscle/MUSCLE] [calories/CALORIES] [instruction/INSTRUCTION] [tag/TAG]…​`
 
 ****
-* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index *must be a positive integer* 1, 2, 3, ...
+* Edits the workout at the specified `INDEX`. The index refers to the index number shown in the displayed workout list. The index *must be a positive integer* 1, 2, 3, ...
 * At least one of the optional fields must be provided.
 * Existing values will be updated to the input values.
-* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.
-* You can remove all the person's tags by typing `t/` without specifying any tags after it.
+* When editing tags, the existing tags of the workout will be removed i.e adding of tags is not cumulative.
+* You can remove all the workout's tags by typing `tag/` without specifying any tags after it.
 ****
 
 Examples:
 
-* `edit 1 p/91234567 e/johndoe@example.com` +
-Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.
-* `edit 2 n/Betsy Crower t/` +
-Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.
+* `edit 1 type/strength duration/20m` +
+Edits the type and duration of the 1st workout to be `strength` and `20m` respectively.
+* `edit 2 name/Arnold's workout tag/` +
+Edits the name of the 2nd workout to be `Arnold's workout` and clears all existing tags.
 
-=== Locating persons by name: `find`
+=== Locating workouts by name: `find`
 
-Finds persons whose names contain any of the given keywords. +
+Finds workouts whose names contain any of the given keywords. +
 Format: `find KEYWORD [MORE_KEYWORDS]`
 
 ****
-* The search is case insensitive. e.g `hans` will match `Hans`
-* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`
+* The search is case insensitive. e.g `Commando workout` will match `commando workout`
+* The order of the keywords does not matter. e.g. `workout commando` will match `commando workout`
 * Only the name is searched.
-* Only full words will be matched e.g. `Han` will not match `Hans`
-* Persons matching at least one keyword will be returned (i.e. `OR` search). e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`
+* Only full words will be matched e.g. `command workout` will not match `commando workout`
+* workouts matching at least one keyword will be returned (i.e. `OR` search). e.g. `commando arnold's` will return `commando workout`, `Arnold's workout`
 ****
 
 Examples:
 
-* `find John` +
-Returns `john` and `John Doe`
-* `find Betsy Tim John` +
-Returns any person having names `Betsy`, `Tim`, or `John`
+* `find commando` +
+Returns `command workout`
+* `find commando arnold's` +
+Returns any workout having names `commando` or `arnold's`
 
-=== Deleting a person : `delete`
+=== Deleting a workout : `delete`
 
-Deletes the specified person from the address book. +
+Deletes the specified workout from the workout book. +
 Format: `delete INDEX`
 
 ****
-* Deletes the person at the specified `INDEX`.
-* The index refers to the index number shown in the displayed person list.
+* Deletes the workout at the specified `INDEX`.
+* The index refers to the index number shown in the displayed workout list.
 * The index *must be a positive integer* 1, 2, 3, ...
 ****
 
@@ -122,19 +121,19 @@
 
 * `list` +
 `delete 2` +
-Deletes the 2nd person in the address book.
-* `find Betsy` +
+Deletes the 2nd workout in the workout book.
+* `find commando` +
 `delete 1` +
-Deletes the 1st person in the results of the `find` command.
+Deletes the 1st workout in the results of the `find` command.
 
-=== Selecting a person : `select`
+=== Selecting a workout : `select`
 
-Selects the person identified by the index number used in the displayed person list. +
+Selects the workout identified by the index number used in the displayed workout list. +
 Format: `select INDEX`
 
 ****
-* Selects the person and loads the Google search page the person at the specified `INDEX`.
-* The index refers to the index number shown in the displayed person list.
+* Selects the workout and loads the Google search page the workout at the specified `INDEX`.
+* The index refers to the index number shown in the displayed workout list.
 * The index *must be a positive integer* `1, 2, 3, ...`
 ****
 
@@ -142,10 +141,10 @@
 
 * `list` +
 `select 2` +
-Selects the 2nd person in the address book.
-* `find Betsy` +
+Selects the 2nd workout in the workout book.
+* `find commando` +
 `select 1` +
-Selects the 1st person in the results of the `find` command.
+Selects the 1st workout in the results of the `find` command.
 
 === Listing entered commands : `history`
 
@@ -160,12 +159,12 @@
 // tag::undoredo[]
 === Undoing previous command : `undo`
 
-Restores the address book to the state before the previous _undoable_ command was executed. +
+Restores the workout book to the state before the previous _undoable_ command was executed. +
 Format: `undo`
 
 [NOTE]
 ====
-Undoable commands: those commands that modify the address book's content (`add`, `delete`, `edit` and `clear`).
+Undoable commands: those commands that modify the workout book's content (`add`, `delete`, `edit` and `clear`).
 ====
 
 Examples:
@@ -209,7 +208,7 @@
 
 === Clearing all entries : `clear`
 
-Clears all entries from the address book. +
+Clears all entries from the workout book. +
 Format: `clear`
 
 === Exiting the program : `exit`
@@ -219,7 +218,7 @@
 
 === Saving the data
 
-Address book data are saved in the hard disk automatically after any command that changes the data. +
+workout book data are saved in the hard disk automatically after any command that changes the data. +
 There is no need to save manually.
 
 // tag::dataencryption[]
@@ -230,20 +229,17 @@
 
 == FAQ
 
-*Q*: How do I transfer my data to another Computer? +
-*A*: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Address Book folder.
-
 == Command Summary
 
-* *Add* `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]...` +
-e.g. `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`
+* *Add* `add name/NAME [type/TYPE] [duration/DURATION] [difficulty/DIFFICULTY] [equipment/EQUIPMENT] [muscle/MUSCLE] [calories/CALORIES] [instruction/INSTRUCTION] [tag/TAG]...` +
+e.g. `add name/commando workout type/strength, cardio duration/20m difficulty/advanced equipment/dumbbell, bench muscle/bicep, tricep calories/150 instruction/set 1: bicep curl reps: 4-6 set 2: tricep extension reps: 4-6 tag/heavy`
 * *Clear* : `clear`
 * *Delete* : `delete INDEX` +
 e.g. `delete 3`
-* *Edit* : `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]...` +
-e.g. `edit 2 n/James Lee e/jameslee@example.com`
+* *Edit* : `dit INDEX [name/NAME] [type/TYPE] [duration/DURATION] [difficulty/DIFFICULTY] [equipment/EQUIPMENT] [muscle/MUSCLE] [calories/CALORIES] [instruction/INSTRUCTION] [tag/TAG]…​` +
+e.g. `edit 1 type/light duration/25m`
 * *Find* : `find KEYWORD [MORE_KEYWORDS]` +
-e.g. `find James Jake`
+e.g. `find bench`
 * *List* : `list`
 * *Help* : `help`
 * *Select* : `select INDEX` +
